<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="find_friend.mapper.RelationMapper">
  <resultMap id="BaseResultMap" type="find_friend.po.Relation">
    <id column="relationID" jdbcType="VARCHAR" property="relationid" />
    <result column="userID" jdbcType="VARCHAR" property="userid" />
    <result column="parternerID" jdbcType="VARCHAR" property="parternerid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    relationID, userID, parternerID
  </sql>
  <select id="selectByExample" parameterType="find_friend.po.RelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relation
    where relationID = #{relationid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from relation
    where relationID = #{relationid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="find_friend.po.RelationExample">
    delete from relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="find_friend.po.Relation">
    insert into relation (relationID, userID, parternerID
      )
    values (#{relationid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{parternerid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="find_friend.po.Relation">
    insert into relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationid != null">
        relationID,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="parternerid != null">
        parternerID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationid != null">
        #{relationid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="parternerid != null">
        #{parternerid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="find_friend.po.RelationExample" resultType="java.lang.Long">
    select count(*) from relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update relation
    <set>
      <if test="record.relationid != null">
        relationID = #{record.relationid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.parternerid != null">
        parternerID = #{record.parternerid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update relation
    set relationID = #{record.relationid,jdbcType=VARCHAR},
      userID = #{record.userid,jdbcType=VARCHAR},
      parternerID = #{record.parternerid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="find_friend.po.Relation">
    update relation
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="parternerid != null">
        parternerID = #{parternerid,jdbcType=VARCHAR},
      </if>
    </set>
    where relationID = #{relationid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="find_friend.po.Relation">
    update relation
    set userID = #{userid,jdbcType=VARCHAR},
      parternerID = #{parternerid,jdbcType=VARCHAR}
    where relationID = #{relationid,jdbcType=VARCHAR}
  </update>
</mapper>