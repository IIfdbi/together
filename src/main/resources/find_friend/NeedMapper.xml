<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="find_friend.mapper.NeedMapper">
  <resultMap id="BaseResultMap" type="find_friend.po.Need">
    <id column="needid" jdbcType="VARCHAR" property="needid" />
    <result column="createuserid" jdbcType="VARCHAR" property="createuserid" />
    <result column="ddl" jdbcType="TIMESTAMP" property="ddl" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
    <result column="first_tag" jdbcType="VARCHAR" property="firstTag" />
    <result column="maxcount" jdbcType="SMALLINT" property="maxcount" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="second_tag" jdbcType="VARCHAR" property="secondTag" />
    <result column="submitted" jdbcType="TINYINT" property="submitted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    needid, createuserid, ddl, detail, first_tag, maxcount, school, second_tag, submitted
  </sql>
  <select id="selectByExample" parameterType="find_friend.po.NeedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from need
    where needid = #{needid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from need
    where needid = #{needid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="find_friend.po.NeedExample">
    delete from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="find_friend.po.Need">
    insert into need (needid, createuserid, ddl, 
      detail, first_tag, maxcount, 
      school, second_tag, submitted
      )
    values (#{needid,jdbcType=VARCHAR}, #{createuserid,jdbcType=VARCHAR}, #{ddl,jdbcType=TIMESTAMP}, 
      #{detail,jdbcType=VARCHAR}, #{firstTag,jdbcType=VARCHAR}, #{maxcount,jdbcType=SMALLINT}, 
      #{school,jdbcType=VARCHAR}, #{secondTag,jdbcType=VARCHAR}, #{submitted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="find_friend.po.Need">
    insert into need
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="needid != null">
        needid,
      </if>
      <if test="createuserid != null">
        createuserid,
      </if>
      <if test="ddl != null">
        ddl,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="firstTag != null">
        first_tag,
      </if>
      <if test="maxcount != null">
        maxcount,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="secondTag != null">
        second_tag,
      </if>
      <if test="submitted != null">
        submitted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="needid != null">
        #{needid,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null">
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="ddl != null">
        #{ddl,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="firstTag != null">
        #{firstTag,jdbcType=VARCHAR},
      </if>
      <if test="maxcount != null">
        #{maxcount,jdbcType=SMALLINT},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="secondTag != null">
        #{secondTag,jdbcType=VARCHAR},
      </if>
      <if test="submitted != null">
        #{submitted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="find_friend.po.NeedExample" resultType="java.lang.Long">
    select count(*) from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update need
    <set>
      <if test="record.needid != null">
        needid = #{record.needid,jdbcType=VARCHAR},
      </if>
      <if test="record.createuserid != null">
        createuserid = #{record.createuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.ddl != null">
        ddl = #{record.ddl,jdbcType=TIMESTAMP},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.firstTag != null">
        first_tag = #{record.firstTag,jdbcType=VARCHAR},
      </if>
      <if test="record.maxcount != null">
        maxcount = #{record.maxcount,jdbcType=SMALLINT},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.secondTag != null">
        second_tag = #{record.secondTag,jdbcType=VARCHAR},
      </if>
      <if test="record.submitted != null">
        submitted = #{record.submitted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update need
    set needid = #{record.needid,jdbcType=VARCHAR},
      createuserid = #{record.createuserid,jdbcType=VARCHAR},
      ddl = #{record.ddl,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=VARCHAR},
      first_tag = #{record.firstTag,jdbcType=VARCHAR},
      maxcount = #{record.maxcount,jdbcType=SMALLINT},
      school = #{record.school,jdbcType=VARCHAR},
      second_tag = #{record.secondTag,jdbcType=VARCHAR},
      submitted = #{record.submitted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="find_friend.po.Need">
    update need
    <set>
      <if test="createuserid != null">
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="ddl != null">
        ddl = #{ddl,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="firstTag != null">
        first_tag = #{firstTag,jdbcType=VARCHAR},
      </if>
      <if test="maxcount != null">
        maxcount = #{maxcount,jdbcType=SMALLINT},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="secondTag != null">
        second_tag = #{secondTag,jdbcType=VARCHAR},
      </if>
      <if test="submitted != null">
        submitted = #{submitted,jdbcType=TINYINT},
      </if>
    </set>
    where needid = #{needid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="find_friend.po.Need">
    update need
    set createuserid = #{createuserid,jdbcType=VARCHAR},
      ddl = #{ddl,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=VARCHAR},
      first_tag = #{firstTag,jdbcType=VARCHAR},
      maxcount = #{maxcount,jdbcType=SMALLINT},
      school = #{school,jdbcType=VARCHAR},
      second_tag = #{secondTag,jdbcType=VARCHAR},
      submitted = #{submitted,jdbcType=TINYINT}
    where needid = #{needid,jdbcType=VARCHAR}
  </update>
</mapper>